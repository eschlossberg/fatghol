%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: figures.dvi
%%BoundingBox: 124 602 184 657
%%DocumentFonts: CMMI10 CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pamz -Pcmz -i -E figures -o fig.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.08.12:2022
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /XYdict where not{250 dict /XYdict exch def /xy{mark exch XYdict begin
countdictstack /xylevel exch def xyopen xycolor mark xypatt xypattern
stopped xyclose end cleartomark}def /xyg{gsave xy}def /xyf{currentfont
exch xy grestore setfont}def /xycc{{xychgcol}xy}def /xyc{XYdict begin
xycolstore end}def /xyx{/xyYpos exch def /xyXpos exch def}def /xyp{currentpoint
xyx}def /xyd{setupDirection XYdirection 2 mul}def /xyct{currentpoint
xyt 2 copy 6 2 roll}def /xyt{xyXpos xyYpos 2 copy translate}def /xyr{neg
rotate xynt}def /xyrs{neg rotate 3 -1 roll sub neg 3 1 roll sub exch
moveto xynt}def /xynt{neg exch neg exch translate}def /xys{scale xynt}def
/xyss{scale 3 -1 roll sub neg 3 1 roll sub exch moveto xynt}def /xyi{0
0 transform grestore gsave itransform}def }if

 /XYdict where pop begin XYdict begin

 /xyopen{currentdict /XYddict known{XYddict null eq{} {XYddict begin
xyopen}ifelse}if}def /xyclose{countdictstack -1 xylevel 1 add{pop end}for}def
/xychgcol{/xycolor exch def}def /xysetcol{xypush xychgcol}def

 /xypush{16 dict /XYddict exch def XYddict begin}def /undef where {pop
/xypop{countdictstack xylevel eq{}{end}ifelse currentdict /XYddict
undef}def} {/xypop{countdictstack xylevel eq{}{end}ifelse /XYddict
null def}def}ifelse /pu /xypush load def /pp /xypop load def

 /xypspt{72 72.27 div dup scale}bind def /pscorrect{.85 mul}bind def
/gstartxy{gsave xypspt xywidth xycap xyjoin xymiter newpath 0 0 moveto}def
/xypath{gstartxy rmoveto counttomark 2 idiv -1 1{pop lineto}for}def
/xystroke{stroke grestore}bind def /xyfill{closepath fill grestore}bind
def /xystfil{closepath gsave fill grestore 0 setgray 0 setlinewidth
xystroke}bind def /xyeofill{closepath eofill grestore}bind def

 /xypolyline{xypath xystroke}def /xypolyfill{xypath xyfill}def /xydotsep{/@
currentlinewidth 2 mul def}def /xypolydot{xypath xydotsep [xydt @]
0 setdash xystroke}def /xypolydash{xypath xydotsep [@ @] 0 setdash
xystroke}def /xypolyeofill{xypath xyeofill}def /pe /xypolyeofill load
def /pl /xypolyline load def /pf /xypolyfill load def /pt /xypolydot
load def /pd /xypolydash load def

 /arc4pop{arcto 4{pop}repeat}bind def /xyoval{gstartxy oval closepath
xystroke}def /xycircle{gstartxy circle xystroke}def /circle{dup 0 moveto
0 0 3 -1 roll 0 360 arc}def /oval{newpath 2 copy exch 5 index add 2
div exch 3 copy 10 3 roll moveto 1 index dup 5 1 roll 3 index 7 index
arc4pop dup dup 4 1 roll 4 index exch 6 index arc4pop 1 index dup 8
1 roll 4 index 4 index arc4pop arc4pop closepath}def /xyellipse{gstartxy
counttomark 1 gt{squarify pop pop 1}if circle xystroke}def /ov /xyoval
load def /ox /xyellipse load def

 /dotit{dup currentlinewidth 6 mul div round div /@ exch def [xydt
@] 0 setdash}def /elldash{dup 4 -1 roll 10 exch div dashit}def /ovdash{dup
10 dashit}def /dashit{div round 2 mul div /@ exch def [@ @] 0 setdash}def
/dotcirc{gstartxy cirlen dotit circle xystroke}def /dashcirc{gstartxy
cirlen dashit circle xystroke}def /dotoval{gstartxy 5 copy ovlen dotit
oval xystroke}def /dashoval{gstartxy 5 copy ovlen ovdash oval xystroke}def
/cirlen{dup 6.283185 mul}bind def /ovlen{3 -1 roll sub 3 1 roll sub
add exch 1.716815 mul sub}def /dotellipse{gstartxy counttomark 1 gt{squarify
pop pop 1}if cirlen dotit circle closepath xystroke}def /dashellipse{gstartxy
counttomark 1 gt{squarify add 2 div 1} {1 exch 1 exch}ifelse cirlen
elldash circle xystroke}def /ot /dotellipse load def /od /dashellipse
load def /vt /dotoval load def /vd /dashoval load def

 /filloval{gstartxy oval xyfill}def /stfiloval{gstartxy oval xystfil}def
/fillcircle{gstartxy circle xyfill}def /stfilcircle{gstartxy circle
xystfil}def /fillellipse{gstartxy squarify pop pop 1 circle xyfill}def
/stfilellipse{gstartxy squarify pop pop 1 circle xystfil}def /squarify{4
copy sub 2 div 3 1 roll sub 2 div translate add 2 div 3 1 roll add
2 div 2 copy scale 2 copy add 2 div currentlinewidth exch div setlinewidth
newpath}def /fe /fillellipse load def /sfe /stfilellipse load def /fo
/filloval load def /sfo /stfiloval load def /fc /fillcircle load def
/sfc /stfilcircle load def

 /xywidth{.4 pscorrect setlinewidth}bind def /xydash{[] 0 setdash}bind
def /xycap{1 setlinecap}bind def /xyjoin{1 setlinejoin}bind def /xymiter{10
setmiterlimit}bind def

 /cc{dup exec xychgcol}def /lw{dup setlinewidth /@l exch def /xywidth{@l
setlinewidth}bind def}def /lc{dup setlinecap /@c exch def /xycap{@c
setlinecap}bind def}def /lj{dup setlinejoin /@j exch def /xyjoin{@j
setlinejoin}bind def}def /ml{dup setmitrelimit /@m exch def /xymiter{@m
setmitrelimit}bind def}def

 /setupDirection{dup -2048 lt{3072 add neg 1024 exch} {dup 0 lt{1024
add neg -1024}{dup 2048 lt{1024 sub -1024 exch} {3072 sub 1024}ifelse}ifelse}ifelse
atan dup 180 gt{360 sub}if dup /XYdirection exch def rotate}def

 userdict begin /gray{setgray}bind def /gray@{setgray}bind def /rgb{setrgbcolor}bind
def /rgb@{setrgbcolor}bind def /hsb{sethsbcolor}bind def /hsb@{sethsbcolor}bind
def /setcmykcolor where{pop}{/setcmykcolor{dup 3 1 roll dup 5 1 roll
exch sub 1 add 5 1 roll exch sub 1 add 4 1 roll exch sub 1 add 3 1
roll setrgbcolor}bind def}ifelse /cmyk{setcmykcolor}bind def /cmyk@{setcmykcolor}bind
def /sethalftone where{/sethalftone load /tone exch def}if /xycolarray
3 array def /xycolstore{currentrgbcolor 2 -1 0 {exch xycolarray 3 1
roll put}for}def xycolstore /xycolor{0 1 2{xycolarray exch get}for
setrgbcolor}def /xypatt{}def /xypattern{cleartomark}bind def end

 end end

 /XYdict where pop begin XYdict begin

 /:patt {XYddict begin 14 dict begin /BGnd exch def /FGnd exch def
/PaintData exch def /PatternType 1 def /PaintType 1 def /BBox[0 0 1
1]def /TilingType 1 def /XStep 1 def /YStep 1 def /PatternMtx[24 0
0 24 0 0]def /PaintProc BGnd null ne {{begin BGnd aload pop setrgbcolor
0 0 1 1 rF FGnd aload pop setrgbcolor 24 24 true PatternMtx PaintData
imagemask end}} {{begin FGnd aload pop setrgbcolor 24 24 true PatternMtx
PaintData imagemask end}} ifelse def currentdict PatternMtx end gsave
patangle xyland{180 add}if rotate macfreq patfreq div dup neg exch
scale matrix currentmatrix grestore gsave setmatrix /DeviceRGB setcolorspace
makepattern grestore end}def

 /rF{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto fill grestore}bind def

 /setpatscreen{/pattstring exch store patfreq patangle xyport not{90
add}if {1 add 4 mul cvi pattstring exch get exch 1 add 4 mul cvi 7
sub bitshift 1 and}setscreen}bind def /setcolpattern{setpatscreen 64
div 1 exch sub currentrgbcolor 1 1 3{pop 1 exch sub 3 index mul 1 exch
sub 3 1 roll}for setrgbcolor pop}def /setgraypattern{setpatscreen 64
div setgray}def /macfreq 9.375 def /patangle 0 def /patfreq 12.5 def

 /checkland{/normland where{pop normland not}{false}ifelse /xyland
exch def /por where{pop por}{/isls where{pop isls not /xyland true
def} {/land where{pop land not}{true} ifelse}ifelse}ifelse /xyport
exch def}def

 /setpatfreq{/patfreq exch def}def /setpatangle{/patangle exch def}def
/setbackcolor{/backcolor exch def}def /setforecolor{/forecolor exch
def}def [1 1 1] setbackcolor xycolarray setforecolor /bg /setbackcolor
load def /fg /setforecolor load def /pa /setpatangle load def /pq /setpatfreq
load def

 /xypattern{checkland counttomark dup 0 eq{pop} {dup 1 eq{pop setpatscreen}
{dup 2 eq{pop setcolpattern} {dup 3 eq{pop /setcolorspace where { /.setcolorspace
where{pop pop pop setcolpattern} {/.buildpattern where {pop forecolor
backcolor :patt setpattern }{pop pop setcolpattern}ifelse}ifelse} {pop
setcolpattern}ifelse} {5 eq{/setcolorspace where{ /.setcolorspace where{pop
pop pop pop pop setcolpattern} {/.buildpattern where {pop :patt setpattern
}{pop pop pop pop setcolpattern}ifelse}ifelse} {pop pop pop setcolpattern}ifelse
}{}ifelse}ifelse}ifelse}ifelse}ifelse cleartomark }def /xysetpattern{/xypatt
exch def}def /sp /xysetpattern load def

 end end

 /XYdict where pop begin XYdict begin

 /xysize 10 def /T true def /F false def /dimendiv{65536 div}bind def
/xysegl 327680 dimendiv def /xyopp{1 -1 scale}bind def /xynormwidth{26213
dimendiv pscorrect}bind def /xywidth{xynormwidth setlinewidth}bind
def

 /xyfont{4096 add 64 div round 64 mul 4096 sub}def /xydt 0.01 def /xysdfont{4096
add 32 div round 32 mul 4096 sub}def /xydots{xywidth 1 setlinecap [xydt
2] 0 setdash}bind def /f /xyfont load def /fs /xysdfont load def

 /xyCheckDir{dup 8 div 3 mul 3 -1 roll sub neg exch div 360 mul dup
dup XYdirection sub 180 div round 180 mul XYdirection add dup 3 -1
roll sub abs 10 gt not{exch}if pop}def

 /xyrulth{26213 dimendiv pscorrect setlinewidth 0 setlinecap}bind def

 /gsavexy{gsave xypspt XYdirection rotate xywidth newpath 0 0 moveto}def
/gchksavexy{gsave xypspt setupDirection xywidth newpath 0 0 moveto}def

 /xyswap{XYdirection 180 add /XYdirection exch def}def /xyline{gstartxy
setupDirection rlineto xystroke}def

 /dash{exch gchksavexy xysegl XYdirection dup -90 lt{pop neg}{90 gt{neg}if}ifelse
exch{neg}if 0 rlineto xystroke}def /stopper{gstartxy setupDirection
0 xysegl 2 div rmoveto 0 xysegl neg rlineto xystroke }def /d /dash
load def /st /stopper load def

 /solid{gstartxy xydash neg exch neg exch rlineto xystroke}def /dashed{gstartxy
2 copy dup mul exch dup mul add sqrt dup xysegl add xysegl 2 mul div
round 2 mul 1 sub div [ exch dup ] 0 setdash neg exch neg exch rlineto
xystroke}def /l /solid load def /dd /dashed load def

 /dot{gstartxy 2 setlinecap [xydt 2] 0 setdash 1 0 rlineto xystroke}def
/dotted{gstartxy 2 copy dup mul exch dup mul add sqrt dup 2 div round
1 add div 2 setlinecap [xydt 3 -1 roll] 0 setdash neg exch neg exch
rlineto 0 0 rlineto xystroke}def /p /dot load def /dt /dotted load
def

 /cubic{gstartxy docubic} def /docubic{chkvalid {chkcubedge 8 -2 roll
moveto curveto xystroke pop} {cleartomark grestore}ifelse}def /chkcubedge{2
copy 1.0 eq{0.0 eq{pop pop}{cubicedge}ifelse} {pop cubicedge}ifelse}def
/bz /cubic load def

 /dotcubic{gstartxy 1 setlinecap [xydt 2] 0 setdash docubic}def /dashcubic{gstartxy
[5 5] 0 setdash docubic}def /bt /dotcubic load def /bd /dashcubic load
def

 /squine{gstartxy dosquine}def /dosquine{chkvalid {chksquedge 2 copy
moveto xysq2cub curveto xystroke pop} {cleartomark grestore}ifelse}def
/q /squine load def

 /chkvalid{2 copy lt{dup 1 gt{false}{true}ifelse}{false}ifelse}def

 /chksquedge{2 copy 1.0 eq{0.0 eq{pop pop}{squineedge}ifelse} {pop
squineedge}ifelse}def /xysq2cub{xysq2cubit 6 1 roll xysq2cubit 6 1
roll 3 index 3 index xysq2cubit 6 1 roll xysq2cubit 6 1 roll pop pop}def
/xysq2cubit{2 index 2 mul add 3 div}def

 /dotsquine{gstartxy 1 setlinecap [xydt 2] 0 setdash dosquine}def /dashsquine{gstartxy
[5 5] 0 setdash dosquine}def /qt /dotsquine load def /qd /dashsquine
load def

 /xy4mul{8 copy 5 -1 roll mul 5 1 roll 6 -1 roll mul 6 1 roll 3 -1
roll mul exch 4 -1 roll mul 3 1 roll add 3 1 roll add exch 10 2 roll
7 -1 roll mul 7 1 roll 4 -1 roll mul 5 1 roll 4 -1 roll mul 4 1 roll
mul add 3 1 roll add exch 3 -1 roll }def

 /xy44mul{4 copy 16 4 roll exch 3 1 roll 4 copy 12 4 roll xy4mul 12
4 roll xy4mul 12 -4 roll 4 copy 16 4 roll 8 4 roll xy4mul 12 4 roll
xy4mul}def

 /cubicedge{10 2 roll exch 8 1 roll 3 -1 roll dup dup 9 2 roll 5 -1
roll dup dup 9 1 roll 8 3 roll 4 1 roll dup dup 5 3 roll dup dup 5
1 roll 3 -1 roll 18 -2 roll 2 copy 1 sub neg 4 1 roll 1 sub neg exch
4 1 roll xy444mul pop pop pop 13 1 roll pop pop pop 9 1 roll 10 1 roll
pop 8 1 roll 7 1 roll 8 1 roll pop 5 1 roll 3 1 roll}def

 /xy444mul{4 copy 24 4 roll 12 -4 roll 16 4 roll 4 copy 16 4 roll xy44mul
20 8 roll xy44mul 12 -4 roll 4 -1 roll 7 1 roll exch 4 1 roll exch
6 -1 roll exch 4 2 roll 16 8 roll 8 4 roll 4 -1 roll 7 1 roll exch
4 1 roll exch 6 -1 roll exch 4 2 roll 8 4 roll 16 4 roll 8 4 roll 20
-4 roll exch 3 1 roll 4 copy 20 4 roll 4 copy 16 4 roll 4 copy 12 4
roll xy4mul 28 4 roll xy4mul 20 4 roll xy4mul 12 4 roll xy4mul}def

 /squineedge{8 2 roll exch 5 1 roll 3 -1 roll dup 6 2 roll 1 index
exch 10 -2 roll 2 copy 1 sub neg 4 1 roll 1 sub neg exch 4 1 roll xy44mul
4 1 roll pop 5 1 roll 6 1 roll 3 -1 roll pop}def

 /xyshort{2 copy abs exch abs add xysegl .5 mul lt {pop pop grestore}{rlineto
xystroke}ifelse}def

 /tipwidth{xywidth xynormwidth dup currentlinewidth exch div sqrt dup
dup scale mul setlinewidth 1 setlinecap}def

 /halftip{tipwidth xysize 10 div 0 0 moveto -.25 0 3 -1 roll -2.5 mul
0 xysize 2 div neg dup .62 mul 2 div neg curveto}bind def

 /atip{gchksavexy halftip xystroke}def /btip{gchksavexy xyopp halftip
xystroke}def /tip{gchksavexy gsave halftip stroke grestore xyopp halftip
xystroke}def /t /tip load def /a /atip load def /b /btip load def

 /cmatip{gchksavexy halfcmtip xystroke}def /cmbtip{gchksavexy xyopp
halfcmtip xystroke}def /cmtip{gchksavexy gsave halfcmtip stroke grestore
xyopp halfcmtip xystroke}def /halfcmtip{tipwidth 0 0 moveto -.1333
0 .25 neg dup .125 3 -1 roll .25 curveto}bind def /ct /cmtip load def
/ca /cmatip load def /cb /cmbtip load def

 /xyfscale{/xyfsize exch def}def /xyfsize{10}def /eu{-0.0551 0.0643
-0.0976 0.1386 -0.125 0.2188}def /cm{-0.105 0.0437 -0.1804 0.1380 -0.2
0.25}def /XY{-0.1753 0.0181 -0.3452 0.0708 -0.5 0.155}def /tipstart{3
-1 roll gchksavexy exch xyfscale tipwidth dup XYdict exch known{dup
/xy eq{pop /XY}if}{pop /XY}ifelse XYdict exch get}def /tipend{halfxytip
xystroke}def /halfxytip{1 1 6{pop xyfsize mul 6 1 roll}for 0 0 moveto
curveto}def /A{tipstart D}def /B{tipstart C}def /C{xyopp D}def /D{exec
tipend}def /AB{tipstart dup gsave exec halfxytip stroke grestore C}def

 /Tip{exch gchksavexy /xyfsize{10}def tipwidth gsave dup XYdict exch
known{dup /xy eq{pop /XT}if}{pop /XT}ifelse XYdict exch get dup halfTip
stroke grestore xyopp halfTip xystroke}def /XT{360 32 div neg}def /Xt{-1
.31 mul 1 atan}def /ET{360 64 div 5 mul neg}def /Et{-1 .31 mul 1 atan}def
/halfTip{exec rotate XY halfxytip}def /halfTtip{halfTip}def /Ttip{exch
gchksavexy /xyfsize{10}def tipwidth gsave dup XYdict exch known{dup
/xy eq{pop /Xt}if}{pop /Xt}ifelse XYdict exch get dup halfTtip stroke
grestore xyopp halfTtip xystroke}def /tt /Tip load def /tT /Ttip load
def

 /halfturn{xysegl 2 div dup dup neg exch rmoveto 0 exch dup exch -180
-90 arc}bind def /aturn{gchksavexy halfturn xystroke}def /bturn{gchksavexy
xyopp halfturn xystroke}def /ta /aturn load def /tb /bturn load def

 /xysqll 231705 dimendiv def /squigl{gchksavexy xysqll dup neg 0 rmoveto
2 div dup dup neg dup 3 -1 roll 2 sqrt mul dup 5 1 roll 135 45 arcn
dup 3 -1 roll -135 -45 arc xystroke}def /g /squigl load def

 /fullhook{0 xysegl 2 div dup -90 90 arcn}bind def /halfhook{xysegl
2 div dup 0 exch 180 90 arcn}bind def

 /ahook{gchksavexy fullhook xystroke}def /bhook{gchksavexy xyopp fullhook
xystroke}def /hook{gchksavexy gsave halfhook stroke grestore xyopp
halfhook xystroke}def /h /hook load def /ha /ahook load def /hb /bhook
load def

 /xyqcirc{dup dup neg exch translate newpath dup neg 0 exch moveto
0 0 3 -1 roll -90 0 arc}bind def

 /circ{gstartxy 3 copy pop 2 copy cos mul 3 1 roll sin mul rmoveto
0 0 5 2 roll arc xystroke}bind def /o /circ load def

 /circhar{gsave dup 3 gt{7 sub neg}if dup 3 eq{pop dup 2 sqrt -2 div
mul}{dup 1 eq{pop dup 2 sqrt 2 div mul} {0 eq{dup}{0}ifelse}ifelse}ifelse
0 translate 3 1 roll circ grestore}bind def /c /circhar load def

 end end
 
@fedspecial end
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueXX 5087385 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b310b58348c4b42393988fef4925cf984423aaf65fea9f0e6
4629953bcf50b919d968d99bd185f83112b2759cc411764e9bde677f57c5ee5a
c555448d5f81a16259ded1e11bf4119d53e8ab07a802df900d3a2d5ccc1c6876
d29c5e9effb7af3ef83400b0910c07873a8c56fa7b1eb1ba426043b00cc95dbe
dc6e136cbbbcb3f67509964f9f281ebf81fe5b018122eaf66c4a838487e82e18
6e006093042848a903efb3469ab6b4049767aadb95c30408dfd58d8a10f4cb22
168decd9f3ee100f07b49aa44c92139b669cc312ba20192454eb2375be6284b0
26659d964b96ae82d4942e758027fcf23c25ed01115af27ce7f20efe2a822bb6
84004f20243a49c9e93301fc21b80815c033c3e2ba58ef53da2157d524b395f2
b37abca13bc6a2f42e824ab7e47106176b0d6db267fbb795ac7425582df2e3dc
55863468a9200742bd7b552c48f8cf58bc21343bd3b95abfa140f33f37c6f3f7
8b0d8a5154eb7c1f62ec598267f13e841a3e64172663935ac8b665d86540d316
ddece329c008049c5e74b27d59022c5515059bc3b89370b1bc6a169c888bb325
e0b74282d6f053a50da4024ed1e433271a32ab8c17d41c632b41cf9f3ecd5fe1
24daf7aea7ce8a63047b245822930d517df7baaafa69d2d17f7d93cebd45416d
f3459365434123a76ccf883a4973bab19807e1f0c4bab03a45f7ed69ff2660ff
3963e4def11001eec4238c368a39d874fd30b3c14f4186ec7700fbce22abe468
eb32baf7b0164f8f21a9b5e706b91411faaa44467cb2180ab03de375c1ab93e9
76e11ab92fdd4a7280a6d1a8dc65c4c89d04c8ed6988045a2a3de9a4c7b1efd3
75b039396b2b2fbce3411457e1e57ac7a384d9b7810d2e7e7236c9c79be3d3b6
f9d91e9a07e9ec7bfea5c0f8e40f5505570b23e7b1ba931aab46dbfca7551f4a
3d1171b1e8bc2169116998e31938e8969457903fd1d048c91bac472c2f667853
25aeb7c9bcd9d05dd0185f236f6dbafdaaec18a4a8b32c51a8915e750957ca2d
90b95ff4aab2bb3d7f1ac44db8a62817fe6454517eb3fae80739887a408917dd
7b617702a1bc9da608f8a897038e5cb424d61866c294659dda681e3e6d734ca9
2feec13ddd7caa61b477f6964c7542041b2ab7fd59d8dae31a4ae411cbfd1c1d
d420815c023a81c6c5ed727cf636103903c0dda24a88f29c3e1645bb8925a760
034819f2d085788fcf3e634010d0c8dec8d9ecac0c60daf5e17caa56b7c06b1e
524cd002667e7b157f739ad75e5620acbe4911942b7d6112d8d5488bb834c52c
194ab9a4a379bd270b5a0521846725edf508adfe9235f47b884a10f648e480d2
b209bd3f3c460be170f8e181cfa6fd650b0f363b76a3b760eb639123803c577f
d2d43c4aee1bacf570bc30cc068c07684c2d98ae3ed1b8747717f6278ff7cd51
e0620ffcb1aee18dd7d5faae4201098b962b9e63fc06dc4c792983f21b31a60b
02c5aa5e8c5af7c21e4c0cab04e5787abd74c6ee317b05323a955692a24ac54e
c03297556f79cb510f16a4ed0df48817a0096089b81c417aa62e87562d389827
bf4916e306d2cae1688676efa4a2922e94403d502b4656e184347dfc7050dcf3
8ce24822bbdc3a0868953cdf12eb2518c9f7f06391c4aefe044c82c1a47debb9
0bf374c985218fcb5092559865817539a69e17a195773c1221af8abb3c2cdb9c
9366ac6ece7fa05532b5ec31ca527cf81d46226ea0e4fa4cd89b1c01488ad6db
388068c4678b0d731f5adbb971e270f0ab5ce635a55ef727b2f7af1ebf1c6f00
865d150ad5a24d0c338c93506723fd19a32913ad030d7d2b49797fc7b3f355ea
ad20137248c312f4979ab0e298b2a74e3c20205fafbdc8ef3e864d977de20e84
b9522449715ea8c48f5daf8eb467ab583bb91c72315a4963bb0e7ed5137d2d26
a26c4f4c4dc3cfda913508aa43885ba77ccf255c80b15469bd58a4292d0f9f64
85ca14f73a26218b1fa6c751d84abbdfcf3b83a50f892c01cfcd32312ae79a74
d906eb63bcef435f64455ff06ebfc724893ad36deeb0158ea35c218da3520b8e
fcbf8ec4242207f0ae97ef18933136b36ebc72ae3439f543f4c6d0245805ea52
930a9ab6c7492ee48c29324d0b3bc31d9aac69f314393cf34774c121b18da1bb
ee8c465cee3836f14e6f4f03af1911ff051dacd5072a41e01cf117b7d3e2616e
8481615dea5bca6934ecf7dcb891154fa25fe7f1b55f0ed5d5c0f322ad9d2b81
47e47b0a3bd2ced107259fdbffdfcae4774a0ea2623a4dae6f8574a4d7747c9e
36765416
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (figures.dvi)
@start /Fa 148[43 34 29 48 104[{}4 83.022 /CMMI10 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
1 0 bop Black Black 1 TeXcolorgray 440 539 9 9 v Black
Black Black 648 778 a
 SDict begin xyc end
 648 778 a 883 679 a @beginspecial
@setspecial
 {19.91682 19.91682 l}xy
 
@endspecial 823 677 a Fa(i)876 669 y(j)850
679 y @beginspecial @setspecial
 {19.91682 19.91682 l}xy
 
@endspecial 648 903
a(h)11 b(k)p 1 TeXcolorgray 440 977 9 9 v Black Black
Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
